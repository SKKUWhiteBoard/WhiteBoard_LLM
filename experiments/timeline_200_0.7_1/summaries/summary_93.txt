The definition is a cylindrical container containing a date covered with a [? basic ?] substance that can be deployed in order to attract and capture insects. Your support will help MIT OpenCourseWare continue to offer high-quality educational resources for free. To make a donation or to view additional materials from hundreds of MIT courses, visit MIT Open courseWare at ocw.mit.edu.The following content is provided under a Creative Commons license. For more information about MIT Open CourseWare, visit opencourseWare.org. i3. A transportation system responsible for moving people and products with an enclosed metal frame equipped with various safety devices using electrically-powered control and locomotion subsystems. A concept for an all-electric vehicle. The i3 and EPFL? Anybody do the i3? Nobody. Anybody else here? Yeah, Veronica. Thank you. There's a lot there. OLIVIER DE WECK: OK. That's pretty good. I would throw a question. Justice. defined could almost apply to a Tramway as well. If this was like a streetcar, don't you think it would apply to that as well? So I think the fact that it's a personal vehicle, I think it's important. So the key in this is, describe the concept using few words precisely, but to set it apart from neighboring concepts. What about Rolex Center? It's a single-layer building with multiple straw used as a library for people to meet and study. bank, a cafeteria, student services. But you could encompass it in a meeting area. You meet and you do some stuff like eating, going to the bank. So in that sense, it's pretty similar. But I think the Rolex Center is such an iconic building that it also serve a kind of a prestige function, to put the institution on the map in terms of it's a statement. Whereas, I would argue our MIT student center, it has very similar functions to theRolex Center, but I wouldn't call it an iconicBuilding. built. So we could spend a lot of time on these, but really crisply refining and thinking about the concept is very, very important. So let me very quickly go through the refrigerator case study to show how do we transition from concept to design. So the first thing you do is understand where is the value-- the stakeholders and the stakeholder analysis and the requirements definition. And then you interpret and incorporate some of the needs into goals, which become requirements. And so the goals then are an instrument of the primary delivery value delivering process. deliver that value you need to design the product, the product system and the product object. And there is a recipe for doing this. So first you start examining the operand associated with value. What's really the thing that generates the value that the user, the beneficiaries care about? Next you say, this is the attribute link. And so the attribute-transforming process is where the value is generated. So the refrigerator effectively becomes a food spoilage rate reduction device. and I. EPFL's Olivier de WECK explains how to reduce the spoilage rate of food. De WECK: Food is pretty essential for humans, this is one of the areas where humans have been very creative. So irradiating, drying, chilling. There's a lot of ways to do this. So keep going. EPFL, how else can we do it? Spoilage rate reduction? AUDIENCE: Using chemicals? OLIVIER DE WACH: Yeah. That's chemical. wine, which is a process to conserve this wonderful [INAUDIBLE].. OLIVIER DE WECK: Please keep some wine for us too, please. AUDIENCE: Beer is the same. So marinating it, vacuum packing, smoking, on and on and. on. My favorite is actually eating it. What do bears do? How do bears conserve food? AUDience: Fat. Right? So bears, they actually consume it and then transform it into fat, into a different storage form, store it inside their bodies. going to operate the system. The element of form and then the specialized element ofform, in this case the cooler, that combination is what we call concept. So once we have that, we can start managing complexity, decomposing function and form, so our system operating process gets decomposed into the primary supporting processes like interfacing, powering, controlling. And then our system object, you can decompose it into different elements, supporting systems, the operand, the operator, and so forth. external heat load, ambient light, and the operator. So exchanging heat means, essentially, the ice itself acts as a heat exchanger. So the speed at which the ice will melt for the same given external temperature is going to be different. So there's an attribute of the ice, which is essentially its quantity, but also it's surface area. And if you put the same quantity of ice, but you put a block of ice,. you put little chips, what will be the difference? Will there be a difference? form that will influence the-- but that's the heat exchanger function. The powering function is pretty clear. That's essentially the energy storage right there. And then the third one is regulation. How does that work? How does the ice provide a thermal regulation in the cooler? Physics 101. And you can go very detailed here, even if you think of a cooler as being something super simple and trivial, once you start listing its internal functions and how the top, the bottom the ice itself, how they interact and support those functions, it's pretty complex. for something very simple like a cooler. One question and then we'll talk about the refrigerator and how it's different in a minute. So architecture selects the concept, the decomposition, mapping of function to form. Design, then, given that, selects the actual values for those design variables, and then you can optimize. So when you look at the example of the cooler here, we have our cooler with the box in the bottom and then the ice, and we can decompose the attributes of that. Swiss refrigerators are much smaller than those in the U.S. That's a big difference between the US and Switzerland. People in the US, we like to have big refrigerators, big gallon of milk. But here we have essentially the decomposition of the refrigerator. We have racks, we have the air. And freon is banned now, so we should use some other. This is a very important distinction. It's the form function mapping for refrigerators. It has a bottom and a top and it's hinged and it uses this phase transition. is a refrigerant, a working fluid, the insulation, the feet and rollers, the frame, the electric motor, sensors, controller doors, lights. And then we have those functions, essentially, the same functions we had for the cooler, holding the food, exchanging the heat, powering, regulating. But the difference is that we have much more of a one-to-one mapping. So the form function mapping in the refrigerator is actually much simpler. It's a much simpler formfunction mapping than the cooler. is concept generation. So take the requirements and think creatively about how these requirements could be fulfilled. That's concept generation, finding systems that do the right thing. And then once you have several concepts, you've got to select among them, which we'll talk about next week. Do you do you see the difference? What do you think? Share your thoughts in the comments below or post a video on our Facebook and Twitter pages. Follow us on Twitter @CNNOpinion and @CNBCOpinions. The NASA approach is basically described in the system engineering handbook in the SE engine as step 3 called logical decomposition. It's about starting with the operand. What is the thing that the beneficiary, the stakeholder cares about and how do we transform that? Concept then elaborate these into architectures that have form function and structural complexity. And then the goodness of an architecture is really a pretty complex concept where we have multiple objectives to satisfy, including performance, resource utilization, cost, operability, safety, capacity, and so forth. The logical decomposition process, as described in the NASA standard, is used to improve the understanding of the technical requirements and the relationship among those. So the idea that we need to partition the system and then derive lower-level technical requirements based on that. That's what's called architecting. Getting back to our high-level system design process, this is, again, that diagram that we've looked at several times already. You can see the red box is where this happened. So we started with mission authority, stakeholder expectation, and then defining those high- level requirements. safe? Is it reliable? And if yes, then you can select that as a baseline, if not, you might have to go back to the red box, which means that architecture didn't work. So you can see this relates very strongly to the system modeling languages that we talked about. And in terms of the logical decomposition flow diagram, you start with your basic high-level requirements and measures of performance. And then on the right side, you come out with the lower-level derived technical requirements. and the logical decomposition work products, which are essentially lower-level definitions of what these subsystems look like. And then you can go off and do the detailed design and then the testing verification and so forth. So it's essentially focused on decomposition, which is an important part of architecting, but it's not the only thing you do. So let me talk about methods and tools for concept generation. So what are different ways of stimulating or organizing creativity? And what I'm showing you here is-- that's essentially a mind map of how to think about the creativity space. which I'm going to mention, but we're not going to do as part of the class, which is stimulants. So this is the idea that somehow people are more creative when their brain, when you put yourself into some other state. So bio-inspired design would be you go in nature, or you read books about seashells and animals and you really try to understand from nature. It's pretty serious. You put yourself in nature and be inspired by what you see. Random inputs, provocations, challenges, and then things like alcohol, and even drugs. is from a student that took the system architecture class. The idea of a mind map is that you look inside yourself and you try to put down on a map different ideas and concepts. In this case, it's system architecture, and then you have these branches coming off. And in order to really make it memorable, you draw it by hand even though there is software for doing this. But I really like this, drawing it byhand the old style. And then you add icons and symbols and colors to make it sticky and memorable. industry almost. Brainstorming. So by the way, who has done brainstorming and organized brainstorming? Who's been part of a brainstorming exercise? Do you want to describe it, how that worked? Make sure you use the mic. AUDIENCE: So we started with our problem, and if I remember it right, it was to redesign a coffee mug. And then basically, for the first part, any idea could go. And the only role was you couldn't criticize anyone else's idea. some rules for how to properly do brainstorming, and some of them are listed here. And then I have another on the next chart, there's sort of a step by step. So it's really try to remove creativity barriers, stimulate each other. There's an ideal group size, and it says 5 to 10 here, but I should probably revise this to be-- what do you think? 7 plus minus 2. It's not going to be that productive with 30 people in the room. So use of intuition, associations. in this book in 1957. There's why is brainstorming useful. A lot of it has to do with this group dynamics. How to organize and host a brainstorming session. And then there's this killer sentences you should never say during a brainstormed. Some of these are pretty funny. How do you actually then take the brainstorming results and use them for further refining or down-selecting concepts? So here's a six-step process for doing a brainstormings session. So you send out invitations a few days ahead of time. take turns expressing thoughts, suggestions, ideas. You should take notes. These big whiteboards are great for that, with idea paint, the whole wall. Or you can do flip charts. You can do different ways of capturing these ideas. And then the idea there is produce a large amount and diversity of ideas. It's called the principle of delayed judgment. So you're not allowed to criticize or particularly praise. Even though it's praise, it actually implicitly is criticism of the other ideas. Leonardo sketching is more important than writing. He didn't build a lot of his ideas. But he was a head of his time in many ways. So he's really been identified as an exceptional individual. Here's a book called How to Think Like Leonardo, Seven Steps to Genius. And what's been extracted from this is the seven da Vincian principles of creativity. And they're here in Italian. And I'm just going to go through them. I'm not a big fan of these popular books, but this one is pretty interesting. very quickly. So curiosita, lifelong quest for learning. Dimostratzione, testing your knowledge through experience, trying things out. Sensazione, continual refinement of the senses. Mastering ambiguity, paradox, uncertainty. Arte/Scienza is the whole brain thinking, left-right brain. Corporalita, balance of body and mind, so a healthy mind and a healthy body. Connessione is interesting. That gets close to system architecture, which is the appreciation of patterns, relationships, connections, and systems. All right. Let's move to some of the structured processes for creativity. or an architecture. So the key decisions are the rows. There are factors in the rows, and then for each row you think about what are the number of possible alternatives for doing this. And then you enumerate all possible combinations. And I find this to be very, very helpful. When the table gets too big, very quickly because of this being a product, this can really explode on you. It can be very large. And the big challenge with this, of course, is if you have many factors, you could generate many infeasible architectures. Not all these combinations are actually feasible. through creativity, expert knowledge, and analysis you're going to define your components, which are essentially the rows in the morphological matrix. But you're also going to establish rules that tell you which combinations are actually valid combinations and which ones are not. And that, in fact, is [? Narek's ?] PhD topic is, how do you increase the number of physics-based rules rather than just empirical rules. So that's architecture enumeration, and there's different ways of doing this at different layers of abstraction. like 12 different tail geometries here. At that higher abstraction layer, it's just a single tail. So how do you combine these using compositional rules? That's architecture enumeration. So here's also an example from [? Narek's ?] work. So at an engine, a turbo prop engine at a high level of abstraction, that's basically a propeller, an intake, a core, and a core nozzle. And then to break that concept in further detail, the core itself gets shown at a lower level of detail. of this can be done in Excel, for example, where you essentially list your components. This is your library of components. And then on a different sheet, you define all the different rules that allow you to combine different number of instances of these components into architectures. And we'll post some information on this if you want to try this out for your concepts. So let me summarize. So system architecture is definitely very abstract, but it's also, potentially, the most influential activity that we do in system architecting. A3 assignment A3 asks students to come up with new ways of brainstorming. Students must use mind maps, morphological matrices, and architecture enumeration. The assignment is due in two weeks and will be graded on a scale of 1-10. The final assignment will be given to students at the end of the month and the results will be published in the next few days. For more information on the assignment, visit the assignment website. It is open to students from all over the world and can be downloaded from the assignment site.