The grenade algorithm uses a minimal set of three-point correspondences to solve the camera pose estimation problem. The disadvantage of this particular formulation is that it ends up with a four degree polynomial which means that it could give up to a total of four possible solutions. The solution that gives the minimal reprojection error would be considered as the correct solution. The question becomes whether can we find the solution directly from any four point correspondences or more than four point Correspondences such that the solution is unique. rewritten into this form and uh interestingly we note that for every equation here it's only a function of our two unknowns so uh we'll get this system of uh polynomial equation written as f12 that is dependent on s1 and s2 and f13 depending on s 1 and s3. So as a result we'll first get six polynomials in terms of uh s i and s j so why is the reason why we have four points and each pair gives one polynomic so we have to do four choose two. any of the unknowns in the the depth where we simply write it as s i square over here so this can be derived in in this way so here i wrote out all the six combinations of the polynomial equations f i j over here. Each one of this equation it's a just a function of two unknowns Â in the four uh unknown depths s1 s2 s3 and s4 and any three of them it's going to give rise to a fourth order polyn coefficients equation. three by one vector it consists of lambda squared, rho and rho squared which are the unknowns that we want to solve and now uh this is actually an over determinant system because b here is seven by three so this means that we have seven equations over here but only three unknowns. Taking svd of b we get the left singular factors multiplied by the singular values as well as the right singular vector matrix over here and the solution would be the one that corresponds the last column of v over here so once we have solved for the null space vector y using the svd what we can do is to proceed on to solve for Lambda and Rho. solve for lambda and rho uniquely here which means that after solving this and putting it back into the equation over here we'll be able to get a unique solution for t5. In the case where the ratio that's solved by y 0 over y 1 and y 1 over y 2 is not the same we can simply take the average of these values to get the final solution of x. Once we have gotten all the unknown depths we can do the same thing to to apply absolute orientation to recover the camera pose as in the grenade algorithm. correspondences and we can see that because rho and Lambda here can be determined in a unique way and x here can also be determined. We can simply take out the average of this because all the illusions are going to be quite similar or quite close to each other. As a result we'll get the unique solution provided that the four points are not degenerate so uh in this linear four point algorithm the the there will still be two degenerate cases where uh if theFour points are collinear. equation we can stack them all up so one two all the way to six equations and we end up with a coefficient matrix with an a matrix of of dimension 6 by 5. in order for non-trivial solution to exist then this guy here better be of a maximum of rank four so what we can do here is that we can take the svd of a and this will give us u sigma v transpose where we simply the vector that corresponds to the least singular value in sigma. The epmp algorithm mitigates the problem of the linear endpoint algorithm that was shown earlier on by quan and lun that was published in the year 1999 which has cubic complexity in the order of the number of points. The objective is actually to find out the relative transformation between the camera frame and the world frame and notice that in this case the way that it's they define a control a set of control points in this particular approach over here they actually avoid the expression of or expressing the constraints using the unknown depth altogether so there's no unknown depth here. We'll first see how to solve for alpha as well as cj in the world frame using a simple technique that was proposed in this particular paper. The first step would be to compute the centroid of the world points that means that i give uh we are given all the this points which we denote as p i c over here expressed in world frame. We can then make use of the distribution of the set of 3d points in the World frame to get the other three control points. The only set of unknowns that remain would be the control points in the camera frame denoted by cj uh to the superscript of c where j here equals to uh 1 2 3 and 4. And we saw earlier on that this can be expressed in terms of p-i-c which is the weighted sum of the control Points. And since we can make w here the subject we can substitute w back into the first two equations to eliminate w over here the projective scale over here hence we get these two independent equations. The points are actually the same 3d points that is defined in two different reference frames so let's say these are the 3d point p i w would be all expressed with respect to f w. We can solve r and t between these two frames using the absolute orientation algorithm. The efficient pmp algorithm is a on complexity algorithm that solves the camera post estimation problem using theabsolute orientation. It solves for the unknown depth and then make use of the known depth to solve for the rotation and translation using the Absolute post-estimation problem. for the camera pose using a set of control points using four control points in particular and we saw that this uh it's uh the complexity is a linear in terms of the number of points which is much easier to compute then we also saw the degeneracy cases for the camera post estimation problem in particular. If all the points plus the camera center forms a plane then this is also a degenerate case and that's the end of today's lecture thank you mx equals to zero. Mx equals zero.