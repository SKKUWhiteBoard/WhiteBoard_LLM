If you have a complex polyhedron, we found general unfoldings. We proved one of them. If you want an edge unfolding, that's the centuries-old open problem. For non-convex polyhedra, we know this is too much to hope for. Even if it's topologically convex, there's not always an edge unfolds. But for general unfolding, we don't know. So today's lecture is actually mostly about these two open problems and different variations of it that we know how to solve. The claim is facet-paths always exist for any triangulated, connected surface. Once you have this facet- path, you're basically golden because you can lay it out without overlap. The hard part is really getting this path. It's a little bit nontrivial with obtuse triangles. They don't necessarily just lie along the horizontal line. You have to set things up so that those guys are on the boundary, but you can always rotate it so that that's possible. Theory works for any polyhedron, any manifold, any sort of locally, two-dimensional thing. Professor: "I would love to see an implementation of this algorithm" in a computer. If you wanted to unfold a band, obviously, a band can just unfold straight. It's like a nice, long strip. But just keep cutting edges until cutting an edge would cause it to disconnect. If it's inset, I'm cutting with every-- I maybe didn't mention that-- through every vertices, I'll slice with a y-plane. In the case of a triangulated polygon, we usually call them ears. So cut edges until you can't anymore, so until cutting would disconnect. So this means what you're left with will be sort of a tree of faces. There'll be no cycles because if there was a cycle, you could cut one of the edges, and it wouldn't fall apart. So obviously, there's a tree here. Now, trees have leaves. They have at least two leaves. In reality, we're thinking about a dual graph which looks something like this. Picture, or if you just have two maybe. Well, I guess-- Yeah, because then, these are both first-level ears. Or maybe just a Mickey Mouse because those are all-- Well, it probably works. But for these cases, I just need to check that I can find a facet-path. In this one, in the base cases, not always. Like this guy, hard to make a cycle. But if I find two ears or three ears, I can just draw that in. So imagine those guys as being done. I'm left with these four triangles, actually, a little boring because I don't get the Mickey Mouse case. it's a bunch of cycles. You could actually connect some of them together, like these two. But these cycles are not even attached to these cycles, so it's kind of a problem. That's step five is we're going to fix all the problems. We've probably seen this trick once or twice before, I think in the Mountain Valley assignment stuff. So for a triangulated cube, I can splay out those triangles, get a non-overlapping chain like this. Bands are like a stack of orthogonal polygons, a bunch of bands, basically. As long as I get the band to do this, y-faces can hang up and down. It's not going to intersect anybody. So 1 by 2 refinement is enough for orthostacks. With towers, I could have multiple towers here. I really only want one tower built slab by slab. These things we don't know how to grid unfold. That's an open problem, but if you refine just in z by a factor of 2, that's enough. Professor: If you visit faces multiple times and kind of weave around in a clever way, you can do it. You can do stuff, and then, at the end, you should still be facing up. In fact, I basically just zigzagged. This would also work if it was rotated 90 degrees. It's really powerful. It also works if t is on the other side of s. You could do sort of the mirror image traversal. Once you have these sort of paths that visit everything, you just fatten out. left-left-right-right. Then, you will preserve your orientation. You tell each of the children which way you're initially going, and they can deal with it. It's basically telling you whether s and t is like this or the other way around. So now, we end up way up there where the lavender edge is at t10. Now what? We want to come back here, and I'm not allowed to sort of intersect myself. That would be the paper going into two parts of this unfolding. But I have all this space, so natural thing is to just wander from there back down to here, using up the space. So it's going to look like this. If your tree is ugly like something like this, you'll start with something nice and small down here, maybe constant number of terms. Then, you will double again, and it will be exponential. On the other hand, if your tree happens to be nice and balanced, doubling is not so bad because here you'll have constant. This a double everything below, but there's only log n levels. So is that linear? It should be about linear. It's certainly 2 to the theta log n. My conjecture's, in general, you need to omega n refinement. Where they're overlapping, and one on the right. Good question. I forgot to mention the subdivision at the beginning. This leads to another notion which we call grid unfolding. The opposite of cutting is gluing. If you want to make something convex, and therefore, sphere-like, you have to get rid of all the boundary, so you've got a glue every edge. We'll be more formal about defining gluing, I think, next lecture. But first question is suppose I gave you one of these pictures, and I give you agluing. by the same authors, like a year before the general result. So this algorithm has been implemented, at least in some simple examples. And it kind of nicely unrolls. You can see a 5 by 4 refinement in that little staircase. It's, again, to make everything keep going to the right, but here, they find a clever way to visit all the faces without having to revisit, basically, at all. And then, we can zoom out, and you get the unfolding. other open problems. This was genus 0. Interesting question is can you do genus higher than 0? Orthogonal polyhedra. I would guess so, but I'm not sure. The biggest question is, can you make this non-orthogonal? But then, the bands get messy. Haven't been able to do that. All right. Any questions? I'm going to take a break from unfolding now and switch the other direction of folding. So with folding, we're imagining we're given some polygon, and we'd like to make a polyhedron out of it. It's exactly the reverse of what we've been thinking about. When is this possible? This is Cauchy's rigidity theorem. If you have two convex polyhedra and they are combinatorally equivalent, they have the same way that things are connected together, and they have congruent faces, then, they are actually the same thing, the same polyhedron. If I want to make something convex, there's only one thing it could possibly make. Finding out what that one thing is is quite a challenge, but at least, we can prove that it's unique. Geometries of the faces. I know what these edge lengths are in the sphere. What I don't know are these angles of the polygon. If p and p prime are supposed to be different, then there must be two angles that differ. So what I want to show is actually all the angles are equal. Therefore, the polyhedra will be identical. There's no flexibility there, but it could be there are pluses and minuses. That's the proof by contradiction. a sphere. Think of it is as almost flat. What that would mean is there's some other way to draw this thing. Basically, there's a way to flex this linkage so that all of these angles increase and this one stays the same. How could I get a polygon where all the angles increase  and still be convex? Ain't possible. Why is it not possible? It's not possible by something called the Cauchy Arm Lemma. This is the part that Cauy got wrong. In a planar graph, the number of alternations is at most 2 k. The number of edges is half the sum of the degrees of the vertices. Cauchy's rigidity theorem would tell you that there's a unique realization of a convex polyhedron, and there will be a unique gluing realization of it, and that's what we're going to do here. We know it must make a little convex polygons, so we've got lots of polygons here. edge twice, once from each side, so this is half the number of faces. So now, things are starting to look similar, and I want to get some cancellation going on. I'm going to rewrite this formula as V equals 2 plus E minus F. OK? All I did here was decrease by-- well, because there's a half out here, I decrease each coefficient by 2. Whew! So I took E, I subtracted F, just took away one of each. Now, I have this formula. unique set of edges from the shortest paths that actually realize it. The next class will be all about how to actually find those gluings and know that they actually will fold into some convex shape. But that's it for today. We'll be back in a week or so with a new set of questions and a new lesson on how to find the right shape for the right size of an edge. We hope to see you in the next class. Back to the page you came from.