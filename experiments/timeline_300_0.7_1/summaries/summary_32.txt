The grenade algorithm uses a minimal set of three-point correspondences to solve the camera pose estimation problem. The disadvantage of this particular formulation is that it ends up with a four degree polynomial which means that it could give up to a total of four possible solutions. The solution that gives the minimal reprojection error would be considered as the correct solution. The question becomes whether can we find the solution directly from any four point correspondences or more than four point Correspondences such that the solution is unique. s1 s2 and s3 are the unknown depth of the three points so we have uh three point correspondences here which is uh intersects at the camera center. For every equation here it's only a function of our two unknowns so uh we'll get this system of uh polynomial equation written as f12 that is dependent on s1 and s 2 and f13 depending on s 1 and s 3 as well as f23 dependent on s2 and s3. or equation and to over constrain the system uh so as a result we'll first get six polynomials in terms of uh s i and s j. Since we have four points and each pair gives one polynomial so we have to do four choose two. This is going to give us three polynomic equations three fourth degree polynomal equations. There's no guarantee that all this are going to be the same solution due to noisy data and probably the most important part is that we cannot profit from this data redundancy. any of the unknowns in the the depth where we simply write it as s i square over here so this can be derived in in this way so here i wrote out all the six combinations of the polynomial equations f i j over here we can see that each one of this equation it's a just a function of two unknowns. The unknowns which are x 4 x 3 x 2 x and 1 can be written as a vector over here 0 0 and as a result we'll get a three by five matrix and a five by one vector. have a rank of uh three this is the same as solving ax equals to zero where now a here has arank of three the rank of a is at max going to be equals to uh just three so but we have a vector so x here is actually a vector of uh 5 by 1 which means that this has to live in a five-dimensional subspace but a has a only three constraints which means the system of homogeneous linear equations is under constraint but what we can do here is that we can take the svd of a which is uh given by this guy over here. s1 we know that t5 here is actually a vector that is made up of the same entry but of different order so x4 x3 x2 x and 1 of different entry. We know that by observation any two elements the product of tij is going to be equal to tk and tl for this constraint to be valid where i plus j must equal to k plus l we can verify this suppose that i here equals to 1 and if k here for example equals to 3 we can substitute this in. here so uh this simply means that because t5 here earlier on we found the solution here it's spanned by the two right singular vector so we can write the components of this parameterized by lambda rho and v4 v5. If we look at all the combinations we are in total get seven such equation that is given by this table over here that fulfills the constraint of i plus j equals to k plus l and within this particular range that is written here so as a result we'll get seven of these equations over here. The solution would be the one that corresponds the last column of v over here. This is actually an over determinant system because b here is seven by three so this means that we have seven equations over here but only three unknowns that we want to solve. Taking svd of b we get the left singular factors multiplied by the singular values as well as the right singular vector matrix over here so once we have solved for the null space vector y using the svd what we can do is to proceed on to solve for lambdas and rho. basis vectors e4 and v5 respectively earlier on when we solve for t5 so we can see that the first row of t over here is actually equals to one 1 and this equates to Lambda multiplied by the first component of v4 plus rho multiplied by v5. Together with this equation over here you can call this equation 1 and then with equation 2 over here that provides a constraint on Lambda and rho we have two equations and two unknowns and we can solve for lambda and Rho uniquely here. where we can solve for since we know that x equals to s1 squared we can solved for the final depth by taking the square root of x. Once s1 is solved we can back substitute s1 into the polynomial equation of f i j s i and s j equals to zero. After we have gotten all the unknown depths we can do the same thing to to apply absolute orientation to recover the camera pose as in the grenade algorithm and here what's interesting here is that because we have four point correspondences and we can see that because rho and lambda here can be determined in a unique way. there will still be two degenerate cases where uh if the four points are collinear because in this case we are the camera center is still going to lie on a plane with these four points and this will give us degenerate solutions. In the other case would be if all theFour points uh and they are coplanar together with the camera Center. This is also going to be degenerate as what we have seen earlier on now. It happens that the linear four-point algorithm can also be applied to more than four points so for example when n equals to five when there are five point correspondences. equation we can stack them all up so one two all the way to six equations and we end up with a coefficient matrix with an a matrix of of dimension 6 by 5. in order for non-trivial solution to exist then this guy here better be of a maximum of rank four so what we can do here is that we can take the svd of a and this will give us u sigma v transpose where we simply the vector that corresponds to the least singular value in sigma. to the solution of s1 over here now it turns out that the same algorithm that we use to solve the linear four point and the linear five point can be applied to any number of point correspondences that is four or uh more points. Here we just need to solve for the svd of a m minus 1 multiplied by m minus 2 divided by 2 by 5 uh matrix of a to get the solution for the vector t 5 but the problem here is that the overall complexity is a cubic in the order of the number of points that is used to form a. proposed by lapati in the year 2006 is that instead of using every single point correspondences that is given to us the the core idea is that here we'll make use of all these points to define four control points. Even for a very large n the number of control points still stay constant as uh fall. So now this control point becomes our unknown so that we also need to solve for in addition to the camera rotation and translation where these 3d points they are given and they are known. As alpha i4 for one of the 3d point which we denote as pi over here and this this can be easily solved because we know that uh p i over here is a four by one factor in homogeneous uh frame. We can solve for alpha 1 alpha 2 alpha 3 alpha 4 for every single point and it's interesting to note that we do not have to take this constraint here where alpha sums up to 1 explicitly because this is explicitly or implicitly expressed in the last row of this equation over here. in total so uh since each point correspondence gives us two independent equations what this simply means is that we need to stack them up into 2n by 12 matrix which we call m over here to solve for the 12 by 1 unknown of the control points in this homogeneous linear equation. The number of basis solutions that we can get from solving the equation mx equals to zero over here depends on the size of m and which in turn depends upon the number of point correspondences that we have and uh so one way of solving for the basis equation from this uh mx equal to 0 would be to take the svd of the matrix m. have only one basis solution where capital n here equals to 1. what this means is that the rank of m must be equals to 11 and means that there are 11 unique constraints that forms the metric of m. Since we know that each point correspondence is going to give us two constraints this simply means that we need a total of 5.5 point correspondences in order to form a uh m with rank of 11 and that would equate to be six point. Since there are three null space vectors this means that the solution is formed a linear combination of 3 null space basis v1 v2 v3 which is parameterized by 2 and beta 3 here. camera reference frame we can substitute it back into this equation to recover the 3d points that is defined in the camera frame. Once we know this we will be able to solve for the rotation and translation between this two sets of points. We can solve r and t between these two frames using the absolute orientation algorithm. And then finally we look at the efficient pmp algorithm which is a on complexity algorithm that solves the camera post estimation problem using the efficient orientation algorithm and the efficient perspective endpoint problem. for the camera pose using a set of control points using four control points in particular and we saw that this uh it's uh the complexity is a linear in terms of the number of points which is much easier to compute then we also saw the degeneracy cases for the camera post estimation problem in particular. If all the points plus the camera center forms a plane then this is also a degenerate case and that's the end of today's lecture thank you mx equals to zero. Mx equals zero.