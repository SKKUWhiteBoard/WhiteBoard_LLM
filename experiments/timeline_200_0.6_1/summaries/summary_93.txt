The definition is a cylindrical container containing a date covered with a [? basic ?] substance that can be deployed in order to attract and capture insects. Your support will help MIT OpenCourseWare continue to offer high-quality educational resources for free. To make a donation or to view additional materials from hundreds of MIT courses, visit MIT Open courseWare at ocw.mit.edu.The following content is provided under a Creative Commons license. For more information about MIT Open CourseWare, visit opencourseWare.org. i3. A transportation system responsible for moving people and products with an enclosed metal frame equipped with various safety devices using electrically-powered control and locomotion subsystems. A concept for an all-electric vehicle. The i3 and EPFL? Anybody do the i3? Nobody. Anybody else here? Yeah, Veronica. Thank you. There's a lot there. OLIVIER DE WECK: OK. That's pretty good. I would throw a question. Justice. defined could almost apply to a Tramway as well. If this was like a streetcar, don't you think it would apply to that as well? So I think the fact that it's a personal vehicle, I think it's important. So the key in this is, describe the concept using few words precisely, but to set it apart from neighboring concepts. What about Rolex Center? It's a single-layer building with multiple straw used as a library for people to meet and study. bank, a cafeteria, student services. But you could encompass it in a meeting area. You meet and you do some stuff like eating, going to the bank. So in that sense, it's pretty similar. But I think the Rolex Center is such an iconic building that it also serve a kind of a prestige function, to put the institution on the map in terms of it's a statement. Whereas, I would argue our MIT student center, it has very similar functions to theRolex Center, but I wouldn't call it an iconicBuilding. built. So we could spend a lot of time on these, but really crisply refining and thinking about the concept is very, very important. So let me very quickly go through the refrigerator case study to show how do we transition from concept to design. So the first thing you do is understand where is the value-- the stakeholders and the stakeholder analysis and the requirements definition. And then you interpret and incorporate some of the needs into goals, which become requirements. And so the goals then are an instrument of the primary delivery value delivering process. deliver that value you need to design the product, the product system and the product object. And there is a recipe for doing this. So first you start examining the operand associated with value. What's really the thing that generates the value that the user, the beneficiaries care about? Next you say, this is the attribute link. And so the attribute-transforming process is where the value is generated. So the refrigerator effectively becomes a food spoilage rate reduction device. and I. In order to chill, we need a chiller, and there are different types of chillers, like a cooler or refrigerator. The key idea is start thinking in this abstract way, and all of a sudden all these other possibilities become possible. Once we have that, we can start managing complexity, decomposing function and form. And then our system object, you can decompose it into different elements, supporting systems, the operand, the operator, and so forth. It's the combination of this specific way you're going to operate the system. for something very simple like a cooler. One question and then we'll talk about the refrigerator and how it's different in a minute. So architecture selects the concept, the decomposition, mapping of function to form. Design, then, given that, selects the actual values for those design variables, and then you can optimize. So when you look at the example of the cooler here, we have our cooler with the box in the bottom and then the ice, and we can decompose the attributes of that. Swiss refrigerators are much smaller than those in the U.S. The form function mapping in the refrigerator is actually much simpler than the cooler. But the real complexity comes in when you look at the form form mapping. This is then the decomposition of the refrigerator in terms of all the elements of form and then how they relate to each other. In the refrigerator, each of these elements supports, essentially, one of the primary sub-functions. But in the cooler, they have much more of a one-to-one mapping. is concept generation. So take the requirements and think creatively about how these requirements could be fulfilled. That's concept generation, finding systems that do the right thing. And then once you have several concepts, you've got to select among them, which we'll talk about next week. Do you do you see the difference? What do you think? Share your thoughts in the comments below or post a video on our Facebook and Twitter pages. Follow us on Twitter @CNNOpinion and @CNBCOpinions. The goodness of an architecture is really a pretty complex concept where we have multiple objectives to satisfy, including performance, resource utilization, cost, operability, safety, capacity, and so forth. So architecture requires consideration of both function and form related through concept. It's about starting with the operand. What is the thing that the beneficiary, the stakeholder cares about, and how do we transform that? Concept then elaborate these into architectures that have form function and structural complexity. So the NASA approach is basically described in the system engineering handbook in the SE engine as step 3 called logical decomposition. System design and management program is a full-year program. It's essentially focused on decomposition, which is an important part of architecting. So let me talk about methods and tools for concept generation. So what are different ways of stimulating or organizing creativity? And what I'm showing you here is-- that's essentially a mind map of how to think about the creativity space. And then we have this whole area here, which I'm going to mention, but we're not going to do as part of the class. industry almost. There's an ideal group size, and it says 5 to 10 here, but I should probably revise this to be-- what do you think? 7 plus minus 2. If you try to do brainstorming session with 30 people in the room, it's not going to be that productive. What's important is that you have a clear idea of why you're doing the brainstorming sessions. And then there's this killer sentences you should never say during a brainstorming. take turns expressing thoughts, suggestions, ideas. You should take notes. These big whiteboards are great for that, with idea paint, the whole wall. Or you can do flip charts. You can do different ways of capturing these ideas. And then the idea there is produce a large amount and diversity of ideas. It's called the principle of delayed judgment. So you're not allowed to criticize or particularly praise. Even though it's praise, it actually implicitly is criticism of the other ideas. Leonardo sketching is more important than writing. He didn't build a lot of his ideas. But he was a head of his time in many ways. So he's really been identified as an exceptional individual. Here's a book called How to Think Like Leonardo, Seven Steps to Genius. And what's been extracted from this is the seven da Vincian principles of creativity. And they're here in Italian. And I'm just going to go through them. I'm not a big fan of these popular books, but this one is pretty interesting. very quickly. So curiosita, lifelong quest for learning. Dimostratzione, testing your knowledge through experience, trying things out. Sensazione, continual refinement of the senses. Mastering ambiguity, paradox, uncertainty. Arte/Scienza is the whole brain thinking, left-right brain. Corporalita, balance of body and mind, so a healthy mind and a healthy body. Connessione is interesting. That gets close to system architecture, which is the appreciation of patterns, relationships, connections, and systems. All right. Let's move to some of the structured processes for creativity. or an architecture. So the key decisions are the rows. There are factors in the rows, and then for each row you think about what are the number of possible alternatives for doing this. And then you enumerate all possible combinations. And the big challenge with this, of course, is if you have many factors, you could generate many infeasible architectures. Not all these combinations are actually feasible. So that's architecture enumeration, and there's different ways of doing this at different layers of abstraction. like 12 different tail geometries here. At that higher abstraction layer, it's just a single tail. So how do you combine these using compositional rules? That's architecture enumeration. So here's also an example from [? Narek's ?] work. So at an engine, a turbo prop engine at a high level of abstraction, that's basically a propeller, an intake, a core, and a core nozzle. And then to break that concept in further detail, the core itself gets shown at a lower level of detail. of this can be done in Excel, for example, where you essentially list your components. This is your library of components. And then on a different sheet, you define all the different rules that allow you to combine different number of instances of these components into architectures. And we'll post some information on this if you want to try this out for your concepts. So let me summarize. So system architecture is definitely very abstract, but it's also, potentially, the most influential activity that we do in system architecting. A3 assignment A3 asks students to come up with new ways of brainstorming. Students must use mind maps, morphological matrices, and architecture enumeration. The assignment is due in two weeks and will be graded on a scale of 1-10. The final assignment will be given to students at the end of the month and the results will be published in the next few days. For more information on the assignment, visit the assignment website. It is open to students from all over the world and can be downloaded from the assignment site.